
/**
 * https://stackoverflow.com/questions/6150289/how-can-i-convert-an-image-into-base64-string-using-javascript
 * @param {string} url
 * @param {Function} callback
 */
function toDataURLviaXHR(url, callback) {
    var xhr = new XMLHttpRequest();
    xhr.onload = function () {
        var reader = new FileReader();
        reader.onloadend = function () {
            callback(reader.result);
        };
        reader.readAsDataURL(xhr.response);
    };
    xhr.open("GET", url);
    xhr.responseType = "blob";
    xhr.send();
}

/**
 * @param {Blob} arrayBuffer
 * @param {Function} callback
 * @returns base64text
 */
function fileReaderToDataURL(arrayBuffer, callback) {
    var reader = new FileReader();
    reader.onloadend = function () {
        callback(reader.result);
    };
    reader.readAsDataURL(arrayBuffer);
}

/**
* @param {string} url
* @param {Function} callback
* @returns base64text
*/
async function urlToDataURL(url, callback) {
    var dataArray = await (await fetch(url)).arrayBuffer();
    var dataBytes = new Uint8Array(dataArray);
    var blob = new Blob([dataBytes]);

    return fileReaderToDataURL(blob, callback)
}

/**
 * code generated by gpt3.5
 * also ref:  
 * https://stackoverflow.com/questions/19183180/how-to-save-an-image-to-localstorage-and-display-it-on-the-next-page
 * https://stackoverflow.com/questions/22710627/tainted-canvases-may-not-be-exported
 * @param {string} imgSelector 
 * @param {*} callback 
 */
function imgDomToDataURL(imgSelector, callback) {
    // Get the reference to the image element
    var img = document.querySelector(imgSelector);

    // Create a canvas element
    var canvas = document.createElement('canvas');
    var ctx = canvas.getContext('2d');

    // Set canvas dimensions to match the image
    canvas.width = img.width;
    canvas.height = img.height;

    // Draw the image onto the canvas
    ctx.drawImage(img, 0, 0);

    // Get the data URI of the image
    var dataURI = canvas.toDataURL();

    // Set the data URI as the new src for the image element
    // img.src = dataURI;
    callback(dataURI);

    // Optionally, you can remove the src attribute to prevent the browser from loading the image from its original URL
    // img.removeAttribute('src');
}

/**

 */


export {
    urlToDataURL,
    fileReaderToDataURL,
    imgDomToDataURL,
}